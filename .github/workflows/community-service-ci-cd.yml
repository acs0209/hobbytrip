name: CommunityService CI/CD

on:
  push:
    branches:
      - 'BE/dev'
    paths:
      - 'src/backend/community-service/**'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: false
          token: ${{ secrets.COMMUNITY_ACTION_TOKEN }}

      - name: Configure Git to use PAT for submodules
        run: |
          git config --global url."https://${{ secrets.COMMUNITY_ACTION_TOKEN }}@github.com/".insteadOf "https://github.com/"

      - name: Initialize specific submodules
        run: |
          git submodule init src/backend/community-service/community-service-yml
          git submodule update --remote src/backend/community-service/community-service-yml

      - name: Update nested submodules within specific submodule
        run: |
          cd src/backend/community-service/community-service-yml
          git submodule update --init --recursive

      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x src/backend/community-service/gradlew

      - name: Project Build
        env:
          jasypt.encryptor.password: ${{ secrets.JASYPT_PASSWORD }}
        working-directory: ./src/backend/community-service
        run: ./gradlew clean build
        shell: bash

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Image Build
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/community-service:1.0 ./src/backend/community-service

      - name: Docker Image Push
        run: docker push ${{ secrets.DOCKER_USERNAME }}/community-service:1.0

      - name: GCP 인스턴스 접속 및 무중단 배포
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.GCP_HOST }}
          username: ${{ secrets.GCP_USERNAME }}
          key: ${{ secrets.GCP_SSH_KEY }}
          script: |
            cd script
            ./community-update.sh
